<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<net.logstash.logback.marker.Markers: net.logstash.logback.marker.LogstashMarker appendEntries(java.util.Map)> -> _BOTH_
<cn.hutool.json.JSONUtil: cn.hutool.json.JSON parse(java.lang.Object)> -> _BOTH_
<synthetic.method.HttpServletRequestImpl: void <init>()> -> _SOURCE_
<synthetic.method.HttpServletResponseImpl: void <init>()> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: javax.servlet.http.HttpSession getSession()> -> _SOURCE_
<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getRemoteUser()> -> _SOURCE_
<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getemail()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getcode()> -> _SOURCE_
<me.zhyd.oauth.model.AuthUser: java.lang.String getEmail()> -> _SOURCE_
<me.zhyd.oauth.model.AuthToken: java.lang.String getAccessToken()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getkeyword()> -> _SOURCE_
<me.zhyd.oauth.model.AuthToken: java.lang.String getAccessToken()> -> _SOURCE_

<org.springframework.security.config.http.CsrfBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getCsrfLogoutHandler)> -> _SOURCE_
<org.springframework.security.config.authentication.CachingUserDetailsService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)> -> _SOURCE_
<org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper: org.springframework.security.core.userdetails.UserDetails loadUserDetails(org.springframework.security.core.Authentication)> -> _SOURCE_
<java.io.File: java.io.File getAbsoluteFile)> -> _SOURCE_
<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginPage)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: java.lang.String getRealPath(java.lang.String)> -> _SOURCE_
<com.google.auth.oauth2.UserCredentials: java.lang.String getClientSecret)> -> _SOURCE_
<org.springframework.web.servlet.tags.UrlTag: java.lang.String createQueryString(java.util.List,java.util.Set,boolean)> -> _SOURCE_
<org.springframework.messaging.simp.stomp.StompDecoder: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.web.servlet.tags.UrlTag: java.lang.String createUrl)> -> _SOURCE_
<java.io.File: java.io.File getCanonicalFile)> -> _SOURCE_
<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<org.apache.xmlrpc.webserver.RequestData: java.lang.String getMethod)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: com.google.auth.oauth2.GoogleCredentials getDefaultCredentials(com.google.api.client.http.HttpTransport)> -> _SOURCE_
<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.util.DefaultPropertiesPersister: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.owasp.webgoat.plugins.Plugin: void loadFiles(java.nio.file.Path)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletResponseImpl: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<com.google.auth.oauth2.UserAuthorizer: com.google.auth.oauth2.UserCredentials getCredentialsFromCode(java.lang.String,java.net.URI)> -> _SOURCE_
<org.dmfs.oauth2.client.http.requests.ResourceOwnerPasswordTokenRequest: org.dmfs.httpclient.HttpRequestEntity requestEntity)> -> _SOURCE_
<org.owasp.webgoat.util.HtmlEncoder: java.lang.String decode(java.lang.String)> -> _SOURCE_
<javax.naming.ldap.Rdn: java.lang.Object unescapeValue(java.lang.String)> -> _SOURCE_
<org.apache.xmlrpc.webserver.XmlRpcServletServer: org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl getConfig(javax.servlet.http.HttpServletRequest)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: void parsePostData(java.util.Map,java.io.InputStream,java.lang.String)> -> _SOURCE_
<org.springframework.security.concurrent.DelegatingSecurityContextExecutorService: java.util.concurrent.ExecutorService getDelegate)> -> _SOURCE_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.HeadersConfigurer headers)> -> _SOURCE_
<org.springframework.web.servlet.tags.EscapeBodyTag: java.lang.String readBodyContent)> -> _SOURCE_
<org.springframework.web.util.UrlPathHelper: java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCE_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder requestAttr(java.lang.String,java.lang.Object)> -> _SOURCE_
<com.google.auth.oauth2.UserAuthorizer: com.google.auth.oauth2.UserCredentials getCredentials(java.lang.String)> -> _SOURCE_
<org.springframework.web.socket.sockjs.transport.handler.JsonpReceivingTransportHandler: java.lang.String[] readMessages(org.springframework.http.server.ServerHttpRequest)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: com.google.auth.oauth2.GoogleCredentials getDefaultCredentialsUnsynchronized(com.google.api.client.http.HttpTransport)> -> _SOURCE_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginProcessingUrl)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: java.lang.String readLine(byte[])> -> _SOURCE_
<org.springframework.security.config.http.LogoutBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getLogoutRequestMatcher(java.lang.String)> -> _SOURCE_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: java.util.List getLogoutHandlers)> -> _SOURCE_
<org.apache.xmlrpc.webserver.RequestData: java.lang.String getHttpVersion)> -> _SOURCE_
<com.novell.ldap.rfc2251.RfcFilter: byte[] unescapeString(java.lang.String)> -> _SOURCE_
<org.springframework.web.socket.config.HandlersBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: java.io.File getWellKnownCredentialsFile)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: void parseParameters)> -> _SOURCE_
<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)> -> _SOURCE_
<javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)> -> _SOURCE_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()> -> _SOURCE_

<java.net.URL: java.io.InputStream openStream()> -> _BOTH_
<java.net.URL: java.lang.Object getContent()> -> _BOTH_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _BOTH_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_

% Covered by the EasyTaintWrapper given that the HttpEntity is tainted
%<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> -> _SOURCE_


<org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getPassword()> -> _SOURCE_
<org.springframework.web.multipart.MultipartFile: java.lang.String getOriginalFilename()> -> _SOURCE_
<org.springframework.web.servlet.mvc.support.RedirectAttributes: org.springframework.web.servlet.mvc.support.RedirectAttributes addFlashAttribute(java.lang.String,java.lang.Object)> -> _SINK_
<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()> -> _SOURCE_
<redis.clients.jedis.Jedis: java.lang.String set(java.lang.String,java.lang.String,redis.clients.jedis.params.SetParams)> -> _SOURCE_


<run.halo.app.controller.admin.api.JournalController$$SpringCGLIB: run.halo.app.model.params.JournalParam getJournalParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.UserController$$SpringCGLIB: run.halo.app.config.properties.HaloProperties getHaloPropertiesInstance()> -> _SOURCE_
<run.halo.app.controller.content.ContentSearchController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.JournalCommentController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetCommentController$$SpringCGLIB: run.halo.app.model.params.SheetCommentParam getSheetCommentParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostCommentController$$SpringCGLIB: run.halo.app.model.enums.CommentStatus getCommentStatusInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.ThemeController$$SpringCGLIB: run.halo.app.handler.theme.config.support.ThemeProperty getBy()> -> _SOURCE_
<run.halo.app.controller.admin.api.JournalController$$SpringCGLIB: run.halo.app.model.params.JournalQuery getJournalQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController$$SpringCGLIB: run.halo.app.model.params.ResetPasswordParam getResetPasswordParamInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.CategoryController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AttachmentController$$SpringCGLIB: run.halo.app.model.params.AttachmentParam getAttachmentParamInstance()> -> _SOURCE_
<run.halo.app.controller.content.ContentSearchController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<java.security.AccessController: java.security.AccessControlContext getContext()> -> _SOURCE_
<run.halo.app.controller.admin.api.BackupController$$SpringCGLIB: run.halo.app.model.params.PostMarkdownParam getPostMarkdownParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostCommentController$$SpringCGLIB: run.halo.app.model.params.CommentQuery getCommentQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AttachmentController$$SpringCGLIB: run.halo.app.model.params.AttachmentQuery getAttachmentQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetCommentController$$SpringCGLIB: run.halo.app.model.enums.CommentStatus getCommentStatusInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostController$$SpringCGLIB: run.halo.app.model.params.PostQuery getPostQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.StaticStorageController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.UserController$$SpringCGLIB: run.halo.app.model.params.MultiFactorAuthParam getMultiFactorAuthParamInstance()> -> _SOURCE_
<run.halo.app.config.HaloMvcConfiguration: org.springframework.web.servlet.config.'annotation'.ViewControllerRegistry getViewControllerRegistryInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.MenuController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.CategoryController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostCommentController$$SpringCGLIB: run.halo.app.model.params.PostCommentParam getPostCommentParamInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.PhotoController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.OptionController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.JournalCommentController$$SpringCGLIB: run.halo.app.model.params.JournalCommentParam getJournalCommentParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetController$$SpringCGLIB: run.halo.app.model.enums.PostStatus getPostStatusInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController: run.halo.app.model.dto.EnvironmentDTO getEnvironments()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostController$$SpringCGLIB: run.halo.app.model.enums.PostStatus getPostStatusInstance()> -> _SOURCE_
<run.halo.app.service.impl.UserServiceImpl: java.util.Optional getCurrentUser()> -> _SOURCE_
<run.halo.app.controller.admin.api.JournalCommentController$$SpringCGLIB: run.halo.app.model.enums.CommentStatus getCommentStatusInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostCommentController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.StaticStorageController$$SpringCGLIB: run.halo.app.model.params.StaticContentParam getStaticContentParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetController$$SpringCGLIB: run.halo.app.model.params.SheetParam getSheetParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.MailController$$SpringCGLIB: run.halo.app.config.properties.HaloProperties getHaloPropertiesInstance()> -> _SOURCE_
<run.halo.app.controller.content.ContentFeedController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.UserController$$SpringCGLIB: run.halo.app.model.params.PasswordParam getPasswordParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.UserController$$SpringCGLIB: run.halo.app.model.params.UserParam getUserParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.BackupController$$SpringCGLIB: run.halo.app.config.properties.HaloProperties getHaloPropertiesInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.LinkController$$SpringCGLIB: run.halo.app.model.params.LinkParam getLinkParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.InstallController$$SpringCGLIB: run.halo.app.model.params.InstallParam getInstallParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetController$$SpringCGLIB: run.halo.app.model.params.PostContentParam getPostContentParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController$$SpringCGLIB: run.halo.app.config.properties.HaloProperties getHaloPropertiesInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetCommentController$$SpringCGLIB: run.halo.app.model.params.CommentQuery getCommentQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.UserController$$SpringCGLIB: run.halo.app.model.entity.User getUserInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostController$$SpringCGLIB: run.halo.app.model.params.PostContentParam getPostContentParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.TagController$$SpringCGLIB: run.halo.app.model.params.TagParam getTagParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.LinkController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.BackupController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController$$SpringCGLIB: run.halo.app.model.params.LoginParam getLoginParamInstance()> -> _SOURCE_
<run.halo.app.controller.content.api.PhotoController$$SpringCGLIB: run.halo.app.model.params.PhotoQuery getPhotoQueryInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.AdminController$$SpringCGLIB: run.halo.app.model.dto.EnvironmentDTO getEnvironments()> -> _SOURCE_
<run.halo.app.controller.admin.api.SheetCommentController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.MailController$$SpringCGLIB: run.halo.app.model.params.MailParam getMailParamInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.PostController$$SpringCGLIB: run.halo.app.model.params.PostParam getPostParamInstance()> -> _SOURCE_
<run.halo.app.controller.content.ContentContentController$$SpringCGLIB: java.lang.String getString()> -> _SOURCE_
<run.halo.app.controller.admin.api.TagController$$SpringCGLIB: org.springframework.data.domain.Sort getSortInstance()> -> _SOURCE_
<run.halo.app.controller.admin.api.JournalCommentController$$SpringCGLIB: run.halo.app.model.params.CommentQuery getCommentQueryInstance()> -> _SOURCE_


<synthetic.method.SheetRepositoryImpl: java.util.List findAllById(java.lang.Iterable)> -> _SINK_
<synthetic.method.PostCategoryRepositoryImpl: java.util.List findAllByPostIdIn(java.util.Collection)> -> _SINK_
<synthetic.method.TagRepositoryImpl: java.util.List findAll(org.springframework.data.domain.Sort)> -> _SINK_
<synthetic.method.PhotoRepositoryImpl: java.util.List findAllTeams()> -> _SINK_
<synthetic.method.JournalRepositoryImpl: boolean existsById(java.lang.Object)> -> _SINK_
<synthetic.method.SheetRepositoryImpl: java.util.Optional getBySlug(java.lang.String)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.List findPostCount()> -> _SINK_
<synthetic.method.JournalRepositoryImpl: java.util.List findAllById(java.lang.Iterable)> -> _SINK_
<synthetic.method.CategoryRepositoryImpl: long countByName(java.lang.String)> -> _SINK_
<synthetic.method.AttachmentRepositoryImpl: java.util.List findAllType()> -> _SINK_
<synthetic.method.SheetRepositoryImpl: boolean existsBySlug(java.lang.String)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.List deleteByPostId(java.lang.Integer)> -> _SINK_
<synthetic.method.CategoryRepositoryImpl: java.util.Optional getByName(java.lang.String)> -> _SINK_
<run.halo.app.repository.ThemeRepositoryImpl: java.util.Optional fetchThemePropertyByThemeId(java.lang.String)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.Set findAllTagIdsByPostId(java.lang.Integer)> -> _SINK_
<synthetic.method.SheetRepositoryImpl: java.lang.Object getOne(java.lang.Object)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.Set findAllPostIdsByTagId(java.lang.Integer,run.halo.app.model.enums.PostStatus)> -> _SINK_
<synthetic.method.AttachmentRepositoryImpl: java.util.List findAllMediaType()> -> _SINK_
<run.halo.app.repository.ThemeRepositoryImpl: java.lang.String getActivatedThemeId()> -> _SINK_
<synthetic.method.TagRepositoryImpl: java.util.List findAllById(java.lang.Iterable)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.List findAllByPostIdIn(java.util.Collection)> -> _SINK_
<synthetic.method.UserRepositoryImpl: java.util.Optional findByEmail(java.lang.String)> -> _SINK_
<synthetic.method.TagRepositoryImpl: java.util.Optional getBySlug(java.lang.String)> -> _SINK_
<synthetic.method.AttachmentRepositoryImpl: org.springframework.data.domain.Page findAll(org.springframework.data.jpa.domain.Specification,org.springframework.data.domain.Pageable)> -> _SINK_
<synthetic.method.PhotoRepositoryImpl: org.springframework.data.domain.Page findAll(org.springframework.data.jpa.domain.Specification,org.springframework.data.domain.Pageable)> -> _SINK_
<synthetic.method.PostCategoryRepositoryImpl: java.util.Set findAllCategoryIdsByPostId(java.lang.Integer)> -> _SINK_
<synthetic.method.PostCategoryRepositoryImpl: java.util.List findAllByPostId(java.lang.Integer)> -> _SINK_
<synthetic.method.JournalRepositoryImpl: org.springframework.data.domain.Page findAllByType(run.halo.app.model.enums.JournalType,org.springframework.data.domain.Pageable)> -> _SINK_
<synthetic.method.CategoryRepositoryImpl: java.util.List findAll()> -> _SINK_
<synthetic.method.PostCategoryRepositoryImpl: java.util.Set findAllPostIdsByCategoryId(java.lang.Integer,run.halo.app.model.enums.PostStatus)> -> _SINK_
<synthetic.method.SheetRepositoryImpl: java.util.Optional findById(java.lang.Object)> -> _SINK_
<synthetic.method.AttachmentRepositoryImpl: long countByPath(java.lang.String)> -> _SINK_
<synthetic.method.PostTagRepositoryImpl: java.util.List findAllByPostId(java.lang.Integer)> -> _SINK_
<synthetic.method.CategoryRepositoryImpl: java.util.Optional getBySlug(java.lang.String)> -> _SINK_
<synthetic.method.SheetRepositoryImpl: boolean existsByIdNotAndSlug(java.lang.Integer,java.lang.String)> -> _SINK_
<synthetic.method.TagRepositoryImpl: java.util.Optional getByName(java.lang.String)> -> _SINK_
<synthetic.method.ThemeSettingRepositoryImpl: java.util.List findAllByThemeId(java.lang.String)> -> _SINK_
<synthetic.method.UserRepositoryImpl: java.util.Optional findByUsername(java.lang.String)> -> _SINK_
<run.halo.app.repository.ThemeRepositoryImpl: run.halo.app.handler.theme.config.support.ThemeProperty getActivatedThemeProperty()> -> _SINK_
<synthetic.method.TagRepositoryImpl: long countByNameOrSlug(java.lang.String,java.lang.String)> -> _SINK_
<synthetic.method.JournalRepositoryImpl: int updateLikes(java.lang.Long,java.lang.Integer)> -> _SINK_
<synthetic.method.CategoryRepositoryImpl: long countById(java.lang.Integer)> -> _SINK_
<synthetic.method.PostCategoryRepositoryImpl: java.util.List deleteByPostId(java.lang.Integer)> -> _SINK_
