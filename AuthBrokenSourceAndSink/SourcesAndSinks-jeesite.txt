<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getParameter(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<net.logstash.logback.marker.Markers: net.logstash.logback.marker.LogstashMarker appendEntries(java.util.Map)> -> _BOTH_
<cn.hutool.json.JSONUtil: cn.hutool.json.JSON parse(java.lang.Object)> -> _BOTH_
<synthetic.method.HttpServletRequestImpl: void <init>()> -> _SOURCE_
<synthetic.method.HttpServletResponseImpl: void <init>()> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: javax.servlet.http.HttpSession getSession()> -> _SOURCE_
<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()> -> _SOURCE_
<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()> -> _SOURCE_
<synthetic.method.HttpServletRequestImpl: java.lang.String getRemoteUser()> -> _SOURCE_
<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)> -> _SOURCE_
<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getemail()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getcode()> -> _SOURCE_
<me.zhyd.oauth.model.AuthUser: java.lang.String getEmail()> -> _SOURCE_
<me.zhyd.oauth.model.AuthToken: java.lang.String getAccessToken()> -> _SOURCE_
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String getkeyword()> -> _SOURCE_
<me.zhyd.oauth.model.AuthToken: java.lang.String getAccessToken()> -> _SOURCE_

<org.springframework.security.config.http.CsrfBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getCsrfLogoutHandler)> -> _SOURCE_
<org.springframework.security.config.authentication.CachingUserDetailsService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)> -> _SOURCE_
<org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper: org.springframework.security.core.userdetails.UserDetails loadUserDetails(org.springframework.security.core.Authentication)> -> _SOURCE_
<java.io.File: java.io.File getAbsoluteFile)> -> _SOURCE_
<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginPage)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: java.lang.String getRealPath(java.lang.String)> -> _SOURCE_
<com.google.auth.oauth2.UserCredentials: java.lang.String getClientSecret)> -> _SOURCE_
<org.springframework.web.servlet.tags.UrlTag: java.lang.String createQueryString(java.util.List,java.util.Set,boolean)> -> _SOURCE_
<org.springframework.messaging.simp.stomp.StompDecoder: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.web.servlet.tags.UrlTag: java.lang.String createUrl)> -> _SOURCE_
<java.io.File: java.io.File getCanonicalFile)> -> _SOURCE_
<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String)> -> _SOURCE_
<org.apache.xmlrpc.webserver.RequestData: java.lang.String getMethod)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: com.google.auth.oauth2.GoogleCredentials getDefaultCredentials(com.google.api.client.http.HttpTransport)> -> _SOURCE_
<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.springframework.util.DefaultPropertiesPersister: java.lang.String unescape(java.lang.String)> -> _SOURCE_
<org.owasp.webgoat.plugins.Plugin: void loadFiles(java.nio.file.Path)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletResponseImpl: java.lang.String getHeader(java.lang.String)> -> _SOURCE_
<com.google.auth.oauth2.UserAuthorizer: com.google.auth.oauth2.UserCredentials getCredentialsFromCode(java.lang.String,java.net.URI)> -> _SOURCE_
<org.dmfs.oauth2.client.http.requests.ResourceOwnerPasswordTokenRequest: org.dmfs.httpclient.HttpRequestEntity requestEntity)> -> _SOURCE_
<org.owasp.webgoat.util.HtmlEncoder: java.lang.String decode(java.lang.String)> -> _SOURCE_
<javax.naming.ldap.Rdn: java.lang.Object unescapeValue(java.lang.String)> -> _SOURCE_
<org.apache.xmlrpc.webserver.XmlRpcServletServer: org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl getConfig(javax.servlet.http.HttpServletRequest)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: void parsePostData(java.util.Map,java.io.InputStream,java.lang.String)> -> _SOURCE_
<org.springframework.security.concurrent.DelegatingSecurityContextExecutorService: java.util.concurrent.ExecutorService getDelegate)> -> _SOURCE_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.HeadersConfigurer headers)> -> _SOURCE_
<org.springframework.web.servlet.tags.EscapeBodyTag: java.lang.String readBodyContent)> -> _SOURCE_
<org.springframework.web.util.UrlPathHelper: java.lang.String decodeRequestString(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCE_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder requestAttr(java.lang.String,java.lang.Object)> -> _SOURCE_
<com.google.auth.oauth2.UserAuthorizer: com.google.auth.oauth2.UserCredentials getCredentials(java.lang.String)> -> _SOURCE_
<org.springframework.web.socket.sockjs.transport.handler.JsonpReceivingTransportHandler: java.lang.String[] readMessages(org.springframework.http.server.ServerHttpRequest)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: com.google.auth.oauth2.GoogleCredentials getDefaultCredentialsUnsynchronized(com.google.api.client.http.HttpTransport)> -> _SOURCE_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginProcessingUrl)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: java.lang.String readLine(byte[])> -> _SOURCE_
<org.springframework.security.config.http.LogoutBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getLogoutRequestMatcher(java.lang.String)> -> _SOURCE_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: java.util.List getLogoutHandlers)> -> _SOURCE_
<org.apache.xmlrpc.webserver.RequestData: java.lang.String getHttpVersion)> -> _SOURCE_
<com.novell.ldap.rfc2251.RfcFilter: byte[] unescapeString(java.lang.String)> -> _SOURCE_
<org.springframework.web.socket.config.HandlersBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCE_
<com.google.auth.oauth2.DefaultCredentialsProvider: java.io.File getWellKnownCredentialsFile)> -> _SOURCE_
<org.apache.xmlrpc.webserver.HttpServletRequestImpl: void parseParameters)> -> _SOURCE_
<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)> -> _SOURCE_
<javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)> -> _SOURCE_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()> -> _SOURCE_

<java.net.URL: java.io.InputStream openStream()> -> _BOTH_
<java.net.URL: java.lang.Object getContent()> -> _BOTH_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _BOTH_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_

% Covered by the EasyTaintWrapper given that the HttpEntity is tainted
%<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> -> _SOURCE_
%<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> -> _SOURCE_


<org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getPassword()> -> _SOURCE_
<org.springframework.web.multipart.MultipartFile: java.lang.String getOriginalFilename()> -> _SOURCE_
<org.springframework.web.servlet.mvc.support.RedirectAttributes: org.springframework.web.servlet.mvc.support.RedirectAttributes addFlashAttribute(java.lang.String,java.lang.Object)> -> _SINK_
<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()> -> _SOURCE_
<redis.clients.jedis.Jedis: java.lang.String set(java.lang.String,java.lang.String,redis.clients.jedis.params.SetParams)> -> _SOURCE_

<com.thinkgem.jeesite.modules.sys.web.MenuController: com.thinkgem.jeesite.modules.sys.entity.Menu getMenuInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.DictController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.WeixinController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.test.web.TestDataController: com.thinkgem.jeesite.test.entity.TestData getTestDataInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.UserController: com.thinkgem.jeesite.modules.sys.entity.User getUserInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.TemplateController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.CategoryController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.oa.web.LeaveController: com.thinkgem.jeesite.modules.oa.entity.Leave getLeaveInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.oa.web.OaNotifyController: com.thinkgem.jeesite.modules.oa.entity.OaNotify getOaNotifyInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.gen.web.GenTableController: com.thinkgem.jeesite.modules.gen.entity.GenTable getGenTableInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.test.web.TestController: com.thinkgem.jeesite.modules.test.entity.Test getTestInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.SiteController: com.thinkgem.jeesite.modules.cms.entity.Site getSiteInstance()> -> _SOURCE_
<com.thinkgem.jeesite.test.web.TestTreeController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.FrontController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.OfficeController: com.thinkgem.jeesite.modules.sys.entity.Office getOfficeInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.AreaController: com.thinkgem.jeesite.modules.sys.entity.Area getAreaInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.MenuController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.ArticleController: com.thinkgem.jeesite.modules.cms.entity.Article getArticleInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.FrontController: com.thinkgem.jeesite.modules.cms.entity.Comment getCommentInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.web.ActTaskController: com.thinkgem.jeesite.modules.act.entity.Act getActInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.LoginController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.common.supcan.SupcanController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.ArticleController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.gen.web.GenSchemeController: com.thinkgem.jeesite.modules.gen.entity.GenScheme getGenSchemeInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.LinkController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.web.ActProcessController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.UserController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.RoleController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.LinkController: com.thinkgem.jeesite.modules.cms.entity.Link getLinkInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.oa.web.TestAuditController: com.thinkgem.jeesite.modules.oa.entity.TestAudit getTestAuditInstance()> -> _SOURCE_
<com.thinkgem.jeesite.test.web.TestTreeController: com.thinkgem.jeesite.test.entity.TestTree getTestTreeInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.CategoryController: com.thinkgem.jeesite.modules.cms.entity.Category getCategoryInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.AreaController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.rest.editor.main.StencilsetRestResource: java.lang.String getStencilset()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.LogController: com.thinkgem.jeesite.modules.sys.entity.Log getLogInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.rest.servlet.JsonpCallbackFilter: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.OfficeController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.FrontSearchController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.oa.web.LeaveController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.RoleController: com.thinkgem.jeesite.modules.sys.entity.Role getRoleInstance()> -> _SOURCE_
<com.thinkgem.jeesite.test.web.TestDataMainController: com.thinkgem.jeesite.test.entity.TestDataMain getTestDataMainInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.FrontGuestbookController: com.thinkgem.jeesite.modules.cms.entity.Guestbook getGuestbookInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.ArticleController: java.util.List getTplContent()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.web.ActTaskController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.CommentController: com.thinkgem.jeesite.modules.cms.entity.Comment getCommentInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.GuestbookController: com.thinkgem.jeesite.modules.cms.entity.Guestbook getGuestbookInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.sys.web.DictController: com.thinkgem.jeesite.modules.sys.entity.Dict getDictInstance()> -> _SOURCE_
<com.thinkgem.jeesite.modules.act.web.ActModelController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.front.FrontGuestbookController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.cms.web.SiteController: java.lang.String getString()> -> _SOURCE_
<com.thinkgem.jeesite.modules.gen.web.GenTemplateController: com.thinkgem.jeesite.modules.gen.entity.GenTemplate getGenTemplateInstance()> -> _SOURCE_

<synthetic.method.RoleDaoImpl: int insertRoleMenu(com.thinkgem.jeesite.modules.sys.entity.Role)> -> _SINK_
<synthetic.method.UserDaoImpl: int updateUserInfo(com.thinkgem.jeesite.modules.sys.entity.User)> -> _SINK_
<synthetic.method.GenTableDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.RoleDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.TestDataChildDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: int insertUserRole(com.thinkgem.jeesite.modules.sys.entity.User)> -> _SINK_
<synthetic.method.GenTableDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.GenTableColumnDaoImpl: void deleteByGenTableId(java.lang.String)> -> _SINK_
<synthetic.method.GenTableDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.GenTemplateDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.GenDataBaseDictDaoImpl: java.util.List findTablePK(com.thinkgem.jeesite.modules.gen.entity.GenTable)> -> _SINK_
<synthetic.method.UserDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.GenSchemeDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.OaNotifyRecordDaoImpl: int deleteByOaNotifyId(java.lang.String)> -> _SINK_
<synthetic.method.GenTemplateDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.LeaveDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.GenSchemeDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.TestDataChildDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.GenTableDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: int deleteUserRole(com.thinkgem.jeesite.modules.sys.entity.User)> -> _SINK_
<synthetic.method.RoleDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.MenuDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.LeaveDaoImpl: int updateProcessInstanceId(com.thinkgem.jeesite.modules.oa.entity.Leave)> -> _SINK_
<synthetic.method.RoleDaoImpl: int deleteRoleOffice(com.thinkgem.jeesite.modules.sys.entity.Role)> -> _SINK_
<synthetic.method.LeaveDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.GenTableColumnDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.GenTemplateDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.RoleDaoImpl: int deleteRoleMenu(com.thinkgem.jeesite.modules.sys.entity.Role)> -> _SINK_
<synthetic.method.ArticleDataDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.OaNotifyRecordDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: int updatePasswordById(com.thinkgem.jeesite.modules.sys.entity.User)> -> _SINK_
<synthetic.method.ActDaoImpl: int updateProcInsIdByBusinessId(com.thinkgem.jeesite.modules.act.entity.Act)> -> _SINK_
<synthetic.method.GenTableColumnDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.OaNotifyRecordDaoImpl: int insertAll(java.util.List)> -> _SINK_
<synthetic.method.GenTemplateDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.RoleDaoImpl: int insertRoleOffice(com.thinkgem.jeesite.modules.sys.entity.Role)> -> _SINK_
<synthetic.method.OaNotifyRecordDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.MenuDaoImpl: int updateParentIds(com.thinkgem.jeesite.modules.sys.entity.Menu)> -> _SINK_
<synthetic.method.ArticleDaoImpl: java.util.List findStats(com.thinkgem.jeesite.modules.cms.entity.Category)> -> _SINK_
<synthetic.method.GenSchemeDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: java.util.List findUserByOfficeId(com.thinkgem.jeesite.modules.sys.entity.User)> -> _SINK_
<synthetic.method.GenDataBaseDictDaoImpl: java.util.List findTableList(com.thinkgem.jeesite.modules.gen.entity.GenTable)> -> _SINK_
<synthetic.method.GenTableDaoImpl: java.util.List findAllList(java.lang.Object)> -> _SINK_
<synthetic.method.MenuDaoImpl: int updateSort(com.thinkgem.jeesite.modules.sys.entity.Menu)> -> _SINK_
<synthetic.method.UserDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.MenuDaoImpl: int insert(java.lang.Object)> -> _SINK_
<synthetic.method.GenSchemeDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.LeaveDaoImpl: java.util.List findList(java.lang.Object)> -> _SINK_
<synthetic.method.RoleDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.MenuDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.UserDaoImpl: int delete(java.lang.Object)> -> _SINK_
<synthetic.method.TestDataChildDaoImpl: int update(java.lang.Object)> -> _SINK_
<synthetic.method.ArticleDataDaoImpl: int insert(java.lang.Object)> -> _SINK_
